# Command: ./target/release/ai-ground-up sweep             --sweep-allowed=continuous_only             --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0             --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0             --sweep-energy-abs1=1.0             --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100             --energy-model=leak             --sweep-stdout=summary
# Started: Sun Sep 14 18:30:24 EDT 2025
# Git commit: 4cd409752faea256b4b05f71df1f0c866da37da7
# Seeds: 100

AI Ground-Up Computing Research
================================
Using 24 CPU cores

energy_knobs: ENERGY_HOLD_SCALE=1.0 ENERGY_SWITCH_SCALE=1.0 LAMBDA_ENERGY=1.0
Command/s used: ./target/release/ai-ground-up sweep --sweep-allowed=continuous_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100 --energy-model=leak --sweep-stdout=summary
--------------------------------------------------
=== Phase sweep ===
Repro command: ./target/release/ai-ground-up sweep --sweep-allowed=continuous_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100 --energy-model=leak --sweep-stdout=summary
gens=120 pop=40 allowed=["linear", "tanh", "relu", "compressive", "expansive", "saturating"] quant_levels=3 target_states=None mismatch_penalty=0.5 energy_model=leak
sigmas=[0.05, 0.1, 0.2, 0.3, 0.5, 1.0]
energy_zero=[0.0, 0.2, 0.8, 2.0, 5.0, 10.0]  energy_abs1=[1.0]
cells=36
==============================================================
CSV_HEADER,sigma,energy_zero,energy_abs1,n_states,state_values
CSV_ROW,0.050,0.000,1.000,2,[-0.8603178319795868, 0.0] (78/100) [H]
CSV_ROW,0.050,0.200,1.000,2,[-0.8995719752671019, 0.0] (79/100) [H]
CSV_ROW,0.050,0.800,1.000,2,[-0.861756694173247, 0.0] (74/100) [H]
CSV_ROW,0.050,2.000,1.000,2,[-1.1368791179598718, 0.0] (67/100) [H]
[4/36] completed
CSV_ROW,0.050,5.000,1.000,2,[-0.7464188345212422, 0.0] (79/100) [H]
CSV_ROW,0.050,10.000,1.000,2,[-0.9216673226103981, 0.0] (82/100) [H]
CSV_ROW,0.100,0.000,1.000,2,[-2.0, 0.0] (72/100) [H]
CSV_ROW,0.100,0.200,1.000,2,[-0.7431859085387923, 0.0] (80/100) [H]
[8/36] completed
CSV_ROW,0.100,0.800,1.000,2,[-1.997908008377517, 0.0] (76/100)
CSV_ROW,0.100,2.000,1.000,2,[-0.757780784045918, 0.0] (76/100) [H]
CSV_ROW,0.100,5.000,1.000,2,[-2.0, 0.0] (73/100) [H]
CSV_ROW,0.100,10.000,1.000,2,[-2.0, 0.0] (75/100)
[12/36] completed
CSV_ROW,0.200,0.000,1.000,2,[-1.9159054042214558, 0.0] (69/100)
CSV_ROW,0.200,0.200,1.000,2,[0.0, 0.6245478646055044] (65/100)
CSV_ROW,0.200,0.800,1.000,2,[-1.4318740683756492, 0.0] (67/100)
CSV_ROW,0.200,2.000,1.000,2,[-1.8447829851533624, 0.0] (83/100) [H]
[16/36] completed
CSV_ROW,0.200,5.000,1.000,2,[-1.0885654964964655, 0.0] (70/100)
CSV_ROW,0.200,10.000,1.000,2,[-1.6733161723029477, 0.0] (71/100)
CSV_ROW,0.300,0.000,1.000,1,[0.05323937341297522] (61/100)
CSV_ROW,0.300,0.200,1.000,1,[0.0] (56/100)
[20/36] completed
CSV_ROW,0.300,0.800,1.000,1,[0.0] (62/100)
CSV_ROW,0.300,2.000,1.000,1,[0.0765370256458825] (61/100)
CSV_ROW,0.300,5.000,1.000,1,[0.05003811616285445] (66/100)
CSV_ROW,0.300,10.000,1.000,1,[0.03722523882415232] (52/100)
[24/36] completed
CSV_ROW,0.500,0.000,1.000,2,[-1.127500563708439, 0.0] (76/100) [H]
CSV_ROW,0.500,0.200,1.000,2,[-1.1288000807396084, 0.0] (81/100) [H]
CSV_ROW,0.500,0.800,1.000,2,[-1.7890824538620689, 0.0] (72/100)
CSV_ROW,0.500,2.000,1.000,2,[-1.072768149416982, 0.0] (77/100) [H]
[28/36] completed
CSV_ROW,0.500,5.000,1.000,2,[-1.0, 1.0] (82/100) [H]
CSV_ROW,0.500,10.000,1.000,2,[-1.043448387620961, 1.0437048078444602] (76/100) [H]
CSV_ROW,1.000,0.000,1.000,1,[0.0] (93/100)
CSV_ROW,1.000,0.200,1.000,1,[0.0] (89/100)
[32/36] completed
CSV_ROW,1.000,0.800,1.000,1,[0.0] (95/100)
CSV_ROW,1.000,2.000,1.000,1,[0.0] (89/100)
CSV_ROW,1.000,5.000,1.000,1,[0.0] (92/100)
CSV_ROW,1.000,10.000,1.000,1,[0.0] (89/100)
[36/36] completed
==============================================================
Summary (winners by cell): B=24  T=0  Q=0  N=12  A=0
--- sample rows ---
CSV_ROW,0.050,0.000,1.000,2,[-0.8603178319795868, 0.0]
CSV_ROW,0.050,0.200,1.000,2,[-0.8995719752671019, 0.0]
CSV_ROW,0.050,0.800,1.000,2,[-0.861756694173247, 0.0]
CSV_ROW,0.050,2.000,1.000,2,[-1.1368791179598718, 0.0]
CSV_ROW,0.050,5.000,1.000,2,[-0.7464188345212422, 0.0]
CSV_ROW,0.050,10.000,1.000,2,[-0.9216673226103981, 0.0]
CSV_ROW,0.100,0.000,1.000,2,[-2.0, 0.0]
CSV_ROW,0.100,0.200,1.000,2,[-0.7431859085387923, 0.0]
Legend: B=binary(2), T=ternary(3), Q=quaternary(4), N=other discrete, A=analog/continuous
