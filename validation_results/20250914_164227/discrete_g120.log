# Command: ./target/release/ai-ground-up sweep         --sweep-allowed=discrete_only         --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0         --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0         --sweep-energy-abs1=1.0         --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100         --energy-model=base         --sweep-stdout=summary
# Started: Sun Sep 14 22:06:48 EDT 2025
# Git commit: 4cd409752faea256b4b05f71df1f0c866da37da7
# Seeds: 100

AI Ground-Up Computing Research
================================
Using 24 CPU cores

energy_knobs: ENERGY_HOLD_SCALE=1.0 ENERGY_SWITCH_SCALE=1.0 LAMBDA_ENERGY=1.0
Command/s used: ./target/release/ai-ground-up sweep --sweep-allowed=discrete_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100 --energy-model=base --sweep-stdout=summary
--------------------------------------------------
=== Phase sweep ===
Repro command: ./target/release/ai-ground-up sweep --sweep-allowed=discrete_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100 --energy-model=base --sweep-stdout=summary
gens=120 pop=40 allowed=["step", "schmitt", "quantizer"] quant_levels=3 target_states=None mismatch_penalty=0.5 energy_model=base
sigmas=[0.05, 0.1, 0.2, 0.3, 0.5, 1.0]
energy_zero=[0.0, 0.2, 0.8, 2.0, 5.0, 10.0]  energy_abs1=[1.0]
cells=36
==============================================================
CSV_HEADER,sigma,energy_zero,energy_abs1,n_states,state_values
CSV_ROW,0.050,0.000,1.000,3,[-1.0803175862539247, 0.0, 1.0803175862539238] (99/100)
CSV_ROW,0.050,0.200,1.000,3,[-0.829492684376578, 0.0, 0.829492684376578] (98/100)
CSV_ROW,0.050,0.800,1.000,3,[-1.0, 0.0, 1.0] (99/100)
CSV_ROW,0.050,2.000,1.000,3,[-0.8665520995342055, 0.0, 0.8665520995342056] (100/100) [H]
[4/36] completed
CSV_ROW,0.050,5.000,1.000,3,[-1.0674432494034616, 0.0, 1.0674432494034616] (100/100)
CSV_ROW,0.050,10.000,1.000,3,[-1.0705367710434177, 0.0, 1.070536771043417] (99/100)
CSV_ROW,0.100,0.000,1.000,3,[-0.9501701362622944, 0.0, 0.9501701362622944] (99/100)
CSV_ROW,0.100,0.200,1.000,3,[-1.1136272912201894, 0.0, 1.1136272912201897] (100/100)
[8/36] completed
CSV_ROW,0.100,0.800,1.000,3,[-1.1834793941010961, 0.0, 1.183479394101096] (100/100) [H]
CSV_ROW,0.100,2.000,1.000,3,[-0.9156119476824061, 0.0, 0.9156119476824063] (99/100)
CSV_ROW,0.100,5.000,1.000,3,[-1.0, 0.0, 1.0] (99/100)
CSV_ROW,0.100,10.000,1.000,3,[-0.9707240365460778, 0.0, 0.9707240365460776] (100/100)
[12/36] completed
CSV_ROW,0.200,0.000,1.000,3,[-0.936685085281617, 0.0, 0.9366850852816169] (100/100)
CSV_ROW,0.200,0.200,1.000,3,[-1.0389686857297549, 0.0, 1.038968685729755] (100/100)
CSV_ROW,0.200,0.800,1.000,3,[-1.1268541314661829, 0.0, 1.1268541314661829] (100/100)
CSV_ROW,0.200,2.000,1.000,3,[-1.0, 0.0, 1.0] (100/100)
[16/36] completed
CSV_ROW,0.200,5.000,1.000,3,[-0.9523231128317069, 0.0, 0.9523231128317067] (100/100)
CSV_ROW,0.200,10.000,1.000,3,[-1.0, 0.0, 1.0] (100/100)
CSV_ROW,0.300,0.000,1.000,3,[-1.1906057908778225, 0.0, 1.1906057908778227] (100/100)
CSV_ROW,0.300,0.200,1.000,3,[-1.1444515051526305, 0.0, 1.1444515051526296] (100/100)
[20/36] completed
CSV_ROW,0.300,0.800,1.000,3,[-1.224551327232709, 0.0, 1.2245513272327089] (100/100)
CSV_ROW,0.300,2.000,1.000,3,[-1.187710296841215, 0.0, 1.187710296841215] (100/100)
CSV_ROW,0.300,5.000,1.000,3,[-0.8259274620697452, 0.0, 0.8259274620697452] (100/100)
CSV_ROW,0.300,10.000,1.000,3,[-1.1795849004234369, 0.0, 1.1795849004234367] (100/100)
[24/36] completed
CSV_ROW,0.500,0.000,1.000,3,[-1.0518098833040836, 0.0, 1.0518098833040839] (100/100) [H]
CSV_ROW,0.500,0.200,1.000,3,[-0.8014261164788301, 0.0, 0.8014261164788303] (99/100)
CSV_ROW,0.500,0.800,1.000,3,[-1.1771594690407192, 0.0, 1.1771594690407188] (100/100) [H]
CSV_ROW,0.500,2.000,1.000,3,[-1.1089564728459713, 0.0, 1.1089564728459715] (100/100)
[28/36] completed
CSV_ROW,0.500,5.000,1.000,3,[-0.8552726363250036, 0.0, 0.8552726363250038] (100/100)
CSV_ROW,0.500,10.000,1.000,3,[-1.3479657532612943, 0.0, 1.3479657532612936] (99/100) [H]
CSV_ROW,1.000,0.000,1.000,2,[-0.8335025093110809, 0.8322274332762294] (43/100) [H]
CSV_ROW,1.000,0.200,1.000,3,[-1.0, 0.0, 1.0] (50/100)
[32/36] completed
CSV_ROW,1.000,0.800,1.000,2,[-1.0, 1.0] (46/100)
CSV_ROW,1.000,2.000,1.000,2,[-1.9980966646030485, 2.0] (44/100) [H]
CSV_ROW,1.000,5.000,1.000,2,[-0.9680235154355092, 0.9667836216971734] (40/100) [H]
CSV_ROW,1.000,10.000,1.000,3,[-1.0701226566502193, 0.0, 1.0701226566502187] (45/100) [H]
[36/36] completed
==============================================================
Summary (winners by cell): B=4  T=32  Q=0  N=0  A=0
--- sample rows ---
CSV_ROW,0.050,0.000,1.000,3,[-1.0803175862539247, 0.0, 1.0803175862539238]
CSV_ROW,0.050,0.200,1.000,3,[-0.829492684376578, 0.0, 0.829492684376578]
CSV_ROW,0.050,0.800,1.000,3,[-1.0, 0.0, 1.0]
CSV_ROW,0.050,2.000,1.000,3,[-0.8665520995342055, 0.0, 0.8665520995342056]
CSV_ROW,0.050,5.000,1.000,3,[-1.0674432494034616, 0.0, 1.0674432494034616]
CSV_ROW,0.050,10.000,1.000,3,[-1.0705367710434177, 0.0, 1.070536771043417]
CSV_ROW,0.100,0.000,1.000,3,[-0.9501701362622944, 0.0, 0.9501701362622944]
CSV_ROW,0.100,0.200,1.000,3,[-1.1136272912201894, 0.0, 1.1136272912201897]
Legend: B=binary(2), T=ternary(3), Q=quaternary(4), N=other discrete, A=analog/continuous
