# Command: ./target/release/ai-ground-up sweep             --sweep-allowed=continuous_only             --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0             --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0             --sweep-energy-abs1=1.0             --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100             --energy-model=base             --sweep-stdout=summary
# Started: Sun Sep 14 16:42:27 EDT 2025
# Git commit: 4cd409752faea256b4b05f71df1f0c866da37da7
# Seeds: 100

AI Ground-Up Computing Research
================================
Using 24 CPU cores

energy_knobs: ENERGY_HOLD_SCALE=1.0 ENERGY_SWITCH_SCALE=1.0 LAMBDA_ENERGY=1.0
Command/s used: ./target/release/ai-ground-up sweep --sweep-allowed=continuous_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100 --energy-model=base --sweep-stdout=summary
--------------------------------------------------
=== Phase sweep ===
Repro command: ./target/release/ai-ground-up sweep --sweep-allowed=continuous_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=120 --sweep-pop=40 --sweep-seeds=100 --energy-model=base --sweep-stdout=summary
gens=120 pop=40 allowed=["linear", "tanh", "relu", "compressive", "expansive", "saturating"] quant_levels=3 target_states=None mismatch_penalty=0.5 energy_model=base
sigmas=[0.05, 0.1, 0.2, 0.3, 0.5, 1.0]
energy_zero=[0.0, 0.2, 0.8, 2.0, 5.0, 10.0]  energy_abs1=[1.0]
cells=36
==============================================================
CSV_HEADER,sigma,energy_zero,energy_abs1,n_states,state_values
CSV_ROW,0.050,0.000,1.000,2,[-0.8833619017031638, 0.0] (71/100) [H]
CSV_ROW,0.050,0.200,1.000,2,[-0.8464533262382196, 0.0] (68/100) [H]
CSV_ROW,0.050,0.800,1.000,2,[-0.8249742689184774, 0.0] (78/100) [H]
CSV_ROW,0.050,2.000,1.000,2,[-0.9148912328621964, 0.0] (74/100) [H]
[4/36] completed
CSV_ROW,0.050,5.000,1.000,2,[-0.9206455898652466, 0.0] (75/100) [H]
CSV_ROW,0.050,10.000,1.000,2,[-0.7759407714308544, 0.0] (71/100) [H]
CSV_ROW,0.100,0.000,1.000,2,[-1.707814751716488, 0.0] (60/100)
CSV_ROW,0.100,0.200,1.000,2,[-0.8124738337430031, 0.0] (73/100) [H]
[8/36] completed
CSV_ROW,0.100,0.800,1.000,2,[-1.9016858084279915, 0.0] (74/100) [H]
CSV_ROW,0.100,2.000,1.000,2,[-2.0, 0.0] (71/100) [H]
CSV_ROW,0.100,5.000,1.000,2,[-0.7505237604219813, 0.0] (75/100) [H]
CSV_ROW,0.100,10.000,1.000,2,[-0.9488170666341871, 0.0] (65/100) [H]
[12/36] completed
CSV_ROW,0.200,0.000,1.000,2,[-0.7, 0.0] (75/100) [H]
CSV_ROW,0.200,0.200,1.000,2,[-1.6935251261748696, 0.0] (73/100)
CSV_ROW,0.200,0.800,1.000,2,[-1.9124773625123732, 0.0] (69/100)
CSV_ROW,0.200,2.000,1.000,2,[-1.9248251165528296, 0.0] (67/100)
[16/36] completed
CSV_ROW,0.200,5.000,1.000,2,[-1.3935833141904623, 0.0] (68/100)
CSV_ROW,0.200,10.000,1.000,2,[0.0, 0.6618861864949566] (64/100)
CSV_ROW,0.300,0.000,1.000,1,[0.07686208559259616] (56/100)
CSV_ROW,0.300,0.200,1.000,1,[0.04356807993089821] (61/100)
[20/36] completed
CSV_ROW,0.300,0.800,1.000,1,[0.083638379104811] (61/100)
CSV_ROW,0.300,2.000,1.000,1,[0.0] (60/100)
CSV_ROW,0.300,5.000,1.000,1,[0.0] (57/100)
CSV_ROW,0.300,10.000,1.000,1,[0.0] (67/100)
[24/36] completed
CSV_ROW,0.500,0.000,1.000,2,[-0.9550689810062042, 0.9611734837848458] (75/100) [H]
CSV_ROW,0.500,0.200,1.000,2,[-1.1895671647946628, 1.190289837052853] (78/100) [H]
CSV_ROW,0.500,0.800,1.000,2,[-1.104184937247597, 1.10737305809997] (76/100) [H]
CSV_ROW,0.500,2.000,1.000,2,[-1.0, 1.0] (84/100) [H]
[28/36] completed
CSV_ROW,0.500,5.000,1.000,2,[-1.977600933706257, 0.0] (79/100)
CSV_ROW,0.500,10.000,1.000,2,[-1.0420196110072149, 1.045821998371694] (75/100) [H]
CSV_ROW,1.000,0.000,1.000,1,[0.0] (91/100)
CSV_ROW,1.000,0.200,1.000,1,[0.0] (93/100)
[32/36] completed
CSV_ROW,1.000,0.800,1.000,1,[0.0] (89/100)
CSV_ROW,1.000,2.000,1.000,1,[0.0] (89/100) [H]
CSV_ROW,1.000,5.000,1.000,1,[0.0] (86/100)
CSV_ROW,1.000,10.000,1.000,1,[0.0] (92/100)
[36/36] completed
==============================================================
Summary (winners by cell): B=24  T=0  Q=0  N=12  A=0
--- sample rows ---
CSV_ROW,0.050,0.000,1.000,2,[-0.8833619017031638, 0.0]
CSV_ROW,0.050,0.200,1.000,2,[-0.8464533262382196, 0.0]
CSV_ROW,0.050,0.800,1.000,2,[-0.8249742689184774, 0.0]
CSV_ROW,0.050,2.000,1.000,2,[-0.9148912328621964, 0.0]
CSV_ROW,0.050,5.000,1.000,2,[-0.9206455898652466, 0.0]
CSV_ROW,0.050,10.000,1.000,2,[-0.7759407714308544, 0.0]
CSV_ROW,0.100,0.000,1.000,2,[-1.707814751716488, 0.0]
CSV_ROW,0.100,0.200,1.000,2,[-0.8124738337430031, 0.0]
Legend: B=binary(2), T=ternary(3), Q=quaternary(4), N=other discrete, A=analog/continuous
