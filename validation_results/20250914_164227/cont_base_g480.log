# Command: ./target/release/ai-ground-up sweep             --sweep-allowed=continuous_only             --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0             --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0             --sweep-energy-abs1=1.0             --sweep-gens=480 --sweep-pop=40 --sweep-seeds=100             --energy-model=base             --sweep-stdout=summary
# Started: Sun Sep 14 17:04:27 EDT 2025
# Git commit: 4cd409752faea256b4b05f71df1f0c866da37da7
# Seeds: 100

AI Ground-Up Computing Research
================================
Using 24 CPU cores

energy_knobs: ENERGY_HOLD_SCALE=1.0 ENERGY_SWITCH_SCALE=1.0 LAMBDA_ENERGY=1.0
Command/s used: ./target/release/ai-ground-up sweep --sweep-allowed=continuous_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=480 --sweep-pop=40 --sweep-seeds=100 --energy-model=base --sweep-stdout=summary
--------------------------------------------------
=== Phase sweep ===
Repro command: ./target/release/ai-ground-up sweep --sweep-allowed=continuous_only --sweep-sigmas=0.05,0.1,0.2,0.3,0.5,1.0 --sweep-energy-zero=0.0,0.2,0.8,2.0,5.0,10.0 --sweep-energy-abs1=1.0 --sweep-gens=480 --sweep-pop=40 --sweep-seeds=100 --energy-model=base --sweep-stdout=summary
gens=480 pop=40 allowed=["linear", "tanh", "relu", "compressive", "expansive", "saturating"] quant_levels=3 target_states=None mismatch_penalty=0.5 energy_model=base
sigmas=[0.05, 0.1, 0.2, 0.3, 0.5, 1.0]
energy_zero=[0.0, 0.2, 0.8, 2.0, 5.0, 10.0]  energy_abs1=[1.0]
cells=36
==============================================================
CSV_HEADER,sigma,energy_zero,energy_abs1,n_states,state_values
CSV_ROW,0.050,0.000,1.000,2,[-1.8241256120898273, 0.0] (79/100)
CSV_ROW,0.050,0.200,1.000,2,[-1.8927119464796063, 0.0] (80/100)
CSV_ROW,0.050,0.800,1.000,2,[-2.0, 0.0] (83/100)
CSV_ROW,0.050,2.000,1.000,2,[-0.7878042019077804, 0.0] (88/100) [H]
[4/36] completed
CSV_ROW,0.050,5.000,1.000,2,[-0.7898557477002939, 0.0] (88/100) [H]
CSV_ROW,0.050,10.000,1.000,2,[-0.7374657563738977, 0.0] (78/100) [H]
CSV_ROW,0.100,0.000,1.000,2,[-0.7660263660904507, 0.0] (82/100) [H]
CSV_ROW,0.100,0.200,1.000,2,[-0.9062966672412028, 0.0] (85/100) [H]
[8/36] completed
CSV_ROW,0.100,0.800,1.000,2,[-1.4793405779381947, 0.0] (81/100)
CSV_ROW,0.100,2.000,1.000,2,[-0.7578340044295069, 0.0] (87/100) [H]
CSV_ROW,0.100,5.000,1.000,2,[-0.9285977759693259, 0.0] (87/100) [H]
CSV_ROW,0.100,10.000,1.000,2,[-2.0, 0.0] (82/100)
[12/36] completed
CSV_ROW,0.200,0.000,1.000,2,[0.0, 0.7] (78/100)
CSV_ROW,0.200,0.200,1.000,2,[-1.69565588562305, 0.0] (73/100)
CSV_ROW,0.200,0.800,1.000,2,[-0.7, 0.0] (82/100) [H]
CSV_ROW,0.200,2.000,1.000,2,[-0.6429609888671703, 0.0] (76/100) [H]
[16/36] completed
CSV_ROW,0.200,5.000,1.000,2,[-1.723686129698245, 0.0] (79/100)
CSV_ROW,0.200,10.000,1.000,2,[-0.7, 0.0] (88/100) [H]
CSV_ROW,0.300,0.000,1.000,1,[0.0] (56/100)
CSV_ROW,0.300,0.200,1.000,1,[0.09576900860112289] (60/100)
[20/36] completed
CSV_ROW,0.300,0.800,1.000,1,[0.0] (59/100)
CSV_ROW,0.300,2.000,1.000,1,[0.06431826975669458] (62/100)
CSV_ROW,0.300,5.000,1.000,1,[0.0] (64/100)
CSV_ROW,0.300,10.000,1.000,1,[0.0] (65/100)
[24/36] completed
CSV_ROW,0.500,0.000,1.000,2,[-1.166609288038844, 0.0] (87/100) [H]
CSV_ROW,0.500,0.200,1.000,2,[-0.9415206834986483, 0.9478083881045114] (93/100) [H]
CSV_ROW,0.500,0.800,1.000,2,[-1.1279821571506206, 1.130687879968313] (90/100) [H]
CSV_ROW,0.500,2.000,1.000,2,[-1.9736757217220189, 0.0] (89/100)
[28/36] completed
CSV_ROW,0.500,5.000,1.000,2,[-1.587932265564879, 0.0] (88/100)
CSV_ROW,0.500,10.000,1.000,2,[-1.2323324552096449, 0.0] (93/100) [H]
CSV_ROW,1.000,0.000,1.000,1,[0.0] (96/100)
CSV_ROW,1.000,0.200,1.000,1,[0.0] (90/100)
[32/36] completed
CSV_ROW,1.000,0.800,1.000,1,[0.048974514085157066] (90/100)
CSV_ROW,1.000,2.000,1.000,1,[0.0] (85/100)
CSV_ROW,1.000,5.000,1.000,1,[0.0] (91/100) [H]
CSV_ROW,1.000,10.000,1.000,1,[0.0] (94/100)
[36/36] completed
==============================================================
Summary (winners by cell): B=24  T=0  Q=0  N=12  A=0
--- sample rows ---
CSV_ROW,0.050,0.000,1.000,2,[-1.8241256120898273, 0.0]
CSV_ROW,0.050,0.200,1.000,2,[-1.8927119464796063, 0.0]
CSV_ROW,0.050,0.800,1.000,2,[-2.0, 0.0]
CSV_ROW,0.050,2.000,1.000,2,[-0.7878042019077804, 0.0]
CSV_ROW,0.050,5.000,1.000,2,[-0.7898557477002939, 0.0]
CSV_ROW,0.050,10.000,1.000,2,[-0.7374657563738977, 0.0]
CSV_ROW,0.100,0.000,1.000,2,[-0.7660263660904507, 0.0]
CSV_ROW,0.100,0.200,1.000,2,[-0.9062966672412028, 0.0]
Legend: B=binary(2), T=ternary(3), Q=quaternary(4), N=other discrete, A=analog/continuous
